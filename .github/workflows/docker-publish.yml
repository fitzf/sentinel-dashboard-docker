# GitHub Action Build and push Docker images - https://github.com/marketplace/actions/build-and-push-docker-images

name: Publish Docker image

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  release:
    types:
      - published

env:
  SENTINEL_DASHBOARD_VERSION: 1.8.1
  RUN_JAVA_SH_VERSION: v1.3.8

jobs:
  
  build:
    runs-on: ubuntu-latest
    if: "! contains(github.event.head_commit.message, '[ci skip]')"
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Generate image tags
        run: |
          DOCKERHUB_REPOSITORY=zhangfei9734/sentinel-dashboard
          # Use Docker `latest` tag convention
          IMAGE_TAGS=$DOCKERHUB_REPOSITORY:latest

          # Strip "v" prefix from tag name
          ${{ startsWith(github.ref, 'refs/tags/') }} && IMAGE_TAGS="$IMAGE_TAGS,$DOCKERHUB_REPOSITORY:${GITHUB_REF#refs/*/}"

          # Set the `IMAGE_TAGS` environment variable
          echo "IMAGE_TAGS=$IMAGE_TAGS" >> $GITHUB_ENV

          echo "${{ env.IMAGE_TAGS }}"

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          build-args: |
            build_version=${{ env.SENTINEL_DASHBOARD_VERSION }}
            run_java_sh_version=${{ env.RUN_JAVA_SH_VERSION }}
          labels: |
            org.opencontainers.image.authors=${{ github.repository_owner }}
            org.opencontainers.image.source=${{ env.GITHUB_SERVER_URL }}/${{ env.GITHUB_REPOSITORY }}
            org.opencontainers.image.revision=${{ github.sha }}
          tags: ${{ env.IMAGE_TAGS }}
          platforms: linux/amd64,linux/arm64,linux/ppc64le
          push: ${{ startsWith(github.ref, 'refs/tags/') || endsWith(github.ref, 'master') }}
